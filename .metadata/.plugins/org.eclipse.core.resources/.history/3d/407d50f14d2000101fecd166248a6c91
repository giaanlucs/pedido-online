package pedidoonline;

import pedidoonline.singleton.Carrinho;
import pedidoonline.model.Produto;
import pedidoonline.facade.PedidoFacade;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Solicitar o nome do cliente
        System.out.print("Digite seu nome: ");
        String nomeCliente = scanner.nextLine();

        // Solicitar o endereço do cliente
        System.out.print("Digite seu endereço de entrega: ");
        String enderecoEntrega = scanner.nextLine();

        Carrinho carrinho = Carrinho.getInstancia();

        // Listar os produtos disponíveis
        Produto[] produtosDisponiveis = new Produto[] {
            new Produto("Hamburguer", 25.0),
            new Produto("Refrigerante", 8.0),
            new Produto("Batata Frita", 12.0),
            new Produto("Pizza", 40.0),
            new Produto("Sorvete", 15.0)
        };

        System.out.println("\nBem-vindo, " + nomeCliente + "!");
        System.out.println("Escolha os produtos que você deseja adicionar ao seu carrinho:");

        // Exibir os produtos disponíveis
        for (int i = 0; i < produtosDisponiveis.length; i++) {
            System.out.println((i + 1) + ". " + produtosDisponiveis[i].getNome() + " - R$ " + produtosDisponiveis[i].getPreco());
        }

        // Opção para adicionar produtos ao carrinho
        while (true) {
            System.out.println("\nDigite o número do produto para adicionar ao carrinho (ou 0 para finalizar):");
            int opcao = scanner.nextInt();

            if (opcao == 0) {
                break;
            }

            if (opcao > 0 && opcao <= produtosDisponiveis.length) {
                Produto produtoEscolhido = produtosDisponiveis[opcao - 1];
                carrinho.adicionarProduto(produtoEscolhido);
                System.out.println(produtoEscolhido.getNome() + " adicionado ao carrinho.");
            } else {
                System.out.println("Opção inválida! Tente novamente.");
            }

            // Perguntar se o cliente quer adicionar mais produtos ou limpar o carrinho
            System.out.println("\nDeseja adicionar mais produtos? (S para sim, N para não, C para limpar o carrinho):");
            char opcaoContinuar = scanner.next().charAt(0);
            if (opcaoContinuar == 'N' || opcaoContinuar == 'n') {
                break;
            } else if (opcaoContinuar == 'C' || opcaoContinuar == 'c') {
                carrinho.limpar();
                System.out.println("Carrinho limpo.");
            }
        }

        // Exibir os itens do carrinho e o total
        if (carrinho.getProdutos().isEmpty()) {
            System.out.println("\nVocê não adicionou nenhum produto ao carrinho.");
        } else {
            System.out.println("\nResumo do seu pedido, " + nomeCliente + ":");
            for (Produto produto : carrinho.getProdutos()) {
                System.out.println("- " + produto.getNome() + " - R$ " + produto.getPreco());
            }
            System.out.println("\nTotal: R$ " + carrinho.getTotal());
        }

        // Confirmar o pedido
        System.out.println("\nDeseja confirmar o pedido? (S para sim, N para não):");
        char confirmarPedido = scanner.next().charAt(0);
        if (confirmarPedido == 'S' || confirmarPedido == 's') {
            // Escolher a forma de pagamento
            System.out.println("\nEscolha a forma de pagamento:");
            System.out.println("1. Cartão de Crédito");
            System.out.println("2. Boleto Bancário");
            System.out.println("3. Dinheiro");
            int formaPagamento = scanner.nextInt();
            String metodoPagamento = "";

            switch (formaPagamento) {
                case 1:
                    metodoPagamento = "Cartão de Crédito";
                    break;
                case 2:
                    metodoPagamento = "Boleto Bancário";
                    break;
                case 3:
                    metodoPagamento = "Dinheiro";
                    break;
                default:
                    System.out.println("Opção inválida! Pagamento em Dinheiro será considerado.");
                    metodoPagamento = "Dinheiro";
            }

            System.out.println("\nMétodo de pagamento escolhido: " + metodoPagamento);

            // Escolher o tempo de entrega
            System.out.println("\nEscolha o tempo de entrega:");
            System.out.println("1. 30 minutos");
            System.out.println("2. 45 minutos");
            System.out.println("3. 1 hora");
            int tempoEntrega = scanner.nextInt();
            String tempoEstimado = "";

            switch (tempoEntrega) {
                case 1:
                    tempoEstimado = "30 minutos";
                    break;
                case 2:
                    tempoEstimado = "45 minutos";
                    break;
                case 3:
                    tempoEstimado = "1 hora";
                    break;
                default:
                    System.out.println("Opção inválida! Tempo de entrega será considerado como 1 hora.");
                    tempoEstimado = "1 hora";
            }

            System.out.println("\nTempo estimado de entrega: " + tempoEstimado);
            System.out.println("\nEndereço de entrega: " + enderecoEntrega);

            // Finalizar pedido com todos os detalhes
            PedidoFacade sistema = new PedidoFacade();
            sistema.fazerPedido(nomeCliente);

            System.out.println("\nPedido confirmado! Detalhes do pedido:");
            System.out.println("Nome: " + nomeCliente);
            System.out.println("Endereço de entrega: " + enderecoEntrega);
            System.out.println("Método de pagamento: " + metodoPagamento);
            System.out.println("Tempo estimado de entrega: " + tempoEstimado);
            System.out.println("Total do pedido: R$ " + carrinho.getTotal());

            System.out.println("\nObrigado, " + nomeCliente + "! Seu pedido está a caminho!");
        } else {
            System.out.println("\nPedido não confirmado. Você pode refazer o pedido a qualquer momento.");
        }

        scanner.close();
    }
}


